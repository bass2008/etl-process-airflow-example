name: airflow_project
version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"

#  airflow-init:
#    build:
#      context: ./airflow
#      dockerfile: Dockerfile
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
#      AIRFLOW__WEBSERVER__SECRET_KEY: secret
#      AIRFLOW__CORE__EXECUTOR: LocalExecutor
#      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
#      _AIRFLOW_DB_UPGRADE: 'true'
#      _AIRFLOW_WWW_USER_CREATE: 'true'
#      _AIRFLOW_WWW_USER_USERNAME: admin
#      _AIRFLOW_WWW_USER_PASSWORD: admin
#    command: >
#      bash -c '
#        airflow version
#        airflow db init
#        airflow db upgrade
#        airflow users create \
#          --username admin \
#          --password admin \
#          --firstname admin \
#          --lastname admin \
#          --role Admin \
#          --email admin@airflow.com
#        sleep 5
#        airflow connections delete postgres_default
#        airflow connections add "postgres_default" \
#          --conn-type "postgres" \
#          --conn-host "postgres" \
#          --conn-schema "airflow" \
#          --conn-login "airflow" \
#          --conn-password "airflow" \
#          --conn-port "5432"
#      '

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    #depends_on:
    #  airflow-init:
    #    condition: service_completed_successfully
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ../core:/opt/airflow/dags
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
#    depends_on:
#      airflow-init:
#        condition: service_completed_successfully
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ../core:/opt/airflow/dags
    command: scheduler

  superset:
    image: apache/superset:latest
    depends_on:
      - postgres
    environment:
      SUPERSET_SECRET_KEY: superset-secret
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://airflow:airflow@postgres:5432/superset
    ports:
      - "8088:8088"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 10s
      timeout: 30s
      retries: 5
    command: >
      bash -c '
        superset db upgrade
        superset fab create-admin \
          --username admin \
          --firstname Superset \
          --lastname Admin \
          --email admin@superset.com \
          --password admin
        superset init
        gunicorn --bind "0.0.0.0:8088" \
          --worker-class gthread \
          --workers 10 \
          --threads 20 \
          --timeout 120 \
          --limit-request-line 0 \
          --limit-request-field_size 0 \
          "superset.app:create_app()"'

volumes:
  postgres-data: